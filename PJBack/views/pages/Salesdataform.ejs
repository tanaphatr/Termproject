<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%=title%></title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <style>
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(-20px); }
      to { opacity: 1; transform: translateY(0); }
    }
    .fade-in { animation: fadeIn 0.5s ease-out forwards; }
    .table-cell { 
      overflow-wrap: break-word;
      max-width: 150px;
    }
  </style>
</head>

<body class="bg-gradient-to-r from-blue-100 to-purple-100 min-h-screen flex flex-col items-center pt-8">
  <h1 class="text-3xl font-bold text-center text-gray-800 mb-8 fade-in">
    <%=title%>
  </h1>
  
  <!-- Navigation buttons -->
  <div class="button-container grid grid-cols-2 sm:grid-cols-4 gap-4 mb-8">
    <button class="nav-btn bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-lg shadow-md transition duration-300 ease-in-out transform hover:scale-105 fade-in" data-url="/Users/html">Users</button>
    <button class="nav-btn bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-lg shadow-md transition duration-300 ease-in-out transform hover:scale-105 fade-in" data-url="/Products/html">Products</button>
    <button class="nav-btn bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-2 px-4 rounded-lg shadow-md transition duration-300 ease-in-out transform hover:scale-105 fade-in" data-url="/Employees/html">Employees</button>
    <button class="nav-btn bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded-lg shadow-md transition duration-300 ease-in-out transform hover:scale-105 fade-in" data-url="/Daily_salesRoutes/html">Daily Sales</button>
    <button class="nav-btn bg-indigo-500 hover:bg-indigo-600 text-white font-bold py-2 px-4 rounded-lg shadow-md transition duration-300 ease-in-out transform hover:scale-105 fade-in" data-url="/Product_sales/html">Product Sales</button>
    <button class="nav-btn bg-purple-500 hover:bg-purple-600 text-white font-bold py-2 px-4 rounded-lg shadow-md transition duration-300 ease-in-out transform hover:scale-105 fade-in" data-url="/Product_stock_history/html">Product Stock History</button>
    <button class="nav-btn bg-pink-500 hover:bg-pink-600 text-white font-bold py-2 px-4 rounded-lg shadow-md transition duration-300 ease-in-out transform hover:scale-105 fade-in" data-url="/Sales_prediction/html">Sales Prediction</button>
    <button class="nav-btn bg-teal-500 hover:bg-teal-600 text-white font-bold py-2 px-4 rounded-lg shadow-md transition duration-300 ease-in-out transform hover:scale-105 fade-in" data-url="/Salesdata/html">Sales Data</button>
  </div>

  <button id="addNewBtn" class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-lg shadow-md mb-4">Add New Record</button>

  <!-- Table section -->
  <div class="w-[100%] px-4 overflow-x-auto">
    <table class="w-full bg-white shadow-md rounded-lg overflow-hidden border-collapse">
      <thead class="bg-white">
        <tr>
          <% fields.map((field)=> {%>
            <th class="py-3 px-4 border border-gray-300 table-cell"><%=field.name%></th>
          <% }).join(""); %>
          <th class="py-3 px-4 text-left font-semibold text-gray-700 border border-gray-300">Actions</th>
        </tr>
      </thead>
      <tbody id="tableBody">
        <% rows.map((row, index)=> {%>
          <tr class=<%- index % 2===0 ? "\" bg-gray-50\"" : "\" bg-white\""%>>
            <% fields.map((field)=>{ %>
              <td class="py-3 px-4 border border-gray-300 table-cell">
                <%- row[field.name] !==undefined? row[field.name]: "" %>
              </td>
            <% }).join(""); %>
            <td class="py-3 px-4 border border-gray-300">
              <button class="edit-btn bg-blue-500 hover:bg-blue-600 text-white font-bold py-1 px-2 rounded mr-2" data-id="<%= row.sale_data_id %>">Edit</button>
              <button class="delete-btn bg-red-500 hover:bg-red-600 text-white font-bold py-1 px-2 rounded" data-id="<%= row.sale_data_id %>">Delete</button>
            </td>
          </tr>
        <% }).join("");%>
      </tbody>
    </table>
  </div>

  <!-- Edit Modal -->
  <div id="editModal" class="hidden fixed inset-0 z-50 flex items-center justify-center bg-gray-800 bg-opacity-50">
    <div class="bg-white p-6 rounded-lg shadow-lg max-w-3xl w-full">
      <input type="hidden" id="edit_sale_date" name="sale_date">
      <h2 class="text-2xl font-semibold text-center mb-4">Edit Data</h2>
      <form id="editForm" class="flex flex-wrap">
        <% fields.filter((field)=> field.name !== "sale_date").map((field) => {%>
          <div class="mb-4 w-1/2 pr-2">
            <label class="block text-sm font-medium text-gray-700 mb-1"><%=field.name %>:</label>
            <input type="text" name="<%= field.name %>" id="<%= 'edit_' + field.name %>" 
                   class="border border-gray-300 p-2 rounded-md w-full focus:outline-none focus:ring-2 focus:ring-blue-500" required />
          </div>
        <% }).join("") %>
        <div class="flex justify-between w-full mt-4">
          <button type="submit" class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-lg shadow">Save Changes</button>
          <button type="button" id="cancelEditBtn" class="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded-lg shadow">Cancel</button>
        </div>
      </form>
    </div>
  </div>

  <!-- Add Modal -->
  <div id="addModal" class="hidden fixed inset-0 z-50 flex items-center justify-center bg-gray-800 bg-opacity-50">
    <div class="bg-white p-6 rounded-lg shadow-lg max-w-3xl w-full">
      <h2 class="text-2xl font-semibold text-center mb-4">Add New Data</h2>
      <form id="addForm" class="flex flex-wrap">
        <% fields.filter(field => field.name !== 'sales_data_id').map((field) => { %>
          <div class="mb-4 w-1/2 pr-2">
            <label class="block text-sm font-medium text-gray-700 mb-1"><%=field.name%>:</label>
            <input type="text" name="<%=field.name%>" id="add_<%=field.name%>"
                   class="border border-gray-300 p-2 rounded-md w-full focus:outline-none focus:ring-2 focus:ring-blue-500" required />
          </div>
        <% }).join("") %>
        <div class="flex justify-between w-full mt-4">
          <button type="submit" class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-lg shadow">Add Record</button>
          <button type="button" id="cancelAddBtn" class="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded-lg shadow">Cancel</button>
        </div>
      </form>
    </div>
  </div>

  <script>
    // Global variables
    let rowsData = JSON.parse('<%= JSON.stringify(rows) %>');
    let currentSalesDataId = null;

    // DOM loaded handler
    document.addEventListener('DOMContentLoaded', function() {
      // Navigation buttons
      document.querySelectorAll('.nav-btn').forEach(btn => {
        btn.addEventListener('click', function() {
          window.location.href = this.dataset.url;
        });
      });

      // Add New button
      document.getElementById('addNewBtn').addEventListener('click', function() {
        document.getElementById('addModal').classList.remove('hidden');
      });

      // Edit buttons
      document.querySelectorAll('.edit-btn').forEach(btn => {
        btn.addEventListener('click', function() {
          const saleDataId = parseInt(this.dataset.id);
          editRecord(saleDataId);
        });
      });

      // Delete buttons
      document.querySelectorAll('.delete-btn').forEach(btn => {
        btn.addEventListener('click', function() {
          const saleDataId = parseInt(this.dataset.id);
          deleteRecord(saleDataId);
        });
      });

      // Cancel buttons
      document.getElementById('cancelEditBtn').addEventListener('click', function() {
        document.getElementById('editModal').classList.add('hidden');
      });

      document.getElementById('cancelAddBtn').addEventListener('click', function() {
        document.getElementById('addModal').classList.add('hidden');
      });

      // Form submissions
      document.getElementById('editForm').addEventListener('submit', handleEditSubmit);
      document.getElementById('addForm').addEventListener('submit', handleAddSubmit);
    });

    // Functions
    function editRecord(saleDataId) {
      currentSalesDataId = saleDataId;
      const rowToEdit = rowsData.find(row => row.sales_data_id === saleDataId);
      
      if (rowToEdit) {
        <% fields.map((field) => { %>
          const input = document.getElementById('edit_<%= field.name %>');
          if (input) {
            input.value = rowToEdit['<%= field.name %>'] || '';
          }
        <% }).join("\n"); %>
        document.getElementById('editModal').classList.remove('hidden');
      }
    }

    function deleteRecord(saleDataId) {
      if (confirm('Are you sure you want to delete this record?')) {
        axios.delete('/Salesdata/' + saleDataId)
          .then(response => {
            alert('Record deleted successfully');
            window.location.reload();
          })
          .catch(error => {
            console.error('Error:', error);
            alert('Failed to delete the record');
          });
      }
    }

    function handleEditSubmit(event) {
      event.preventDefault();
      
      const data = {};
      <% fields.map((field) => { %>
        const input = document.getElementById('edit_<%= field.name %>');
        if (input) {
          data['<%= field.name %>'] = input.value;
        }
      <% }).join("\n"); %>

      axios.put("/Salesdata/" + currentSalesDataId, data)
        .then(response => {
          alert('Record updated successfully');
          document.getElementById('editModal').classList.add('hidden');
          window.location.reload();
        })
        .catch(error => {
          console.error('Error:', error);
          alert('Failed to update the record');
        });
    }

    function handleAddSubmit(event) {
      event.preventDefault();
      
      const data = {};
      <% fields.filter((field) => field.name !== "sale_data_id").map((field) => { %>
        data['<%= field.name %>'] = document.getElementById('add_<%= field.name %>').value;
      <% }).join("\n"); %>

      axios.post('/Salesdata', data)
        .then(response => {
          alert('Record added successfully');
          document.getElementById('addModal').classList.add('hidden');
          window.location.reload();
        })
        .catch(error => {
          console.error('Error:', error);
          alert('Failed to add the record');
        });
    }
  </script>
</body>
</html>